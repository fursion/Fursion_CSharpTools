<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fursion_CSharpTools</name>
    </assembly>
    <members>
        <member name="M:Fursion_CSharpTools.Net.Client.Connect_To.SubReceiveCb(System.IAsyncResult)">
            <summary>
            增量接收
            </summary>
            <param name="ar"></param>
        </member>
        <member name="T:Fursion_CSharpTools.Net.Public.IPC">
            <summary>
            数据处理中心
            </summary>
        </member>
        <member name="F:Fursion_CSharpTools.Net.Public.IPC.IPC_DATA_POOL">
            <summary>
            数据缓存池
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Public.IPC.InComing_DATA(System.Byte[],Fursion_CSharpTools.Net.Public.Connect)">
            <summary>
            压入数据到数据池
            </summary>
            <param name="BS"></param>
            <param name="connect"></param>
            <returns></returns>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Public.IPC.Remove_DATA(System.Byte[],Fursion_CSharpTools.Net.Public.Connect)">
            <summary>
            从数据池移除数据
            </summary>
            <param name="bs"></param>
            <param name="connect"></param>
            <returns></returns>
        </member>
        <member name="T:Fursion_CSharpTools.Net.Server.Service_IOSystem">
            <summary>
            服务器端的IO操作类，包含远程数据库和本地文存储
            </summary>
        </member>
        <member name="F:Fursion_CSharpTools.Net.Server.Service_IOSystem.MySQLConnectionStatementTemplate">
            <summary>
            数据库连接的模板语句；不可直接用于连接，需要调用CreateMySQLConnectionStatement()方法生成实际的SQLConnectionSatement连接数据库;
            </summary>
        </member>
        <member name="F:Fursion_CSharpTools.Net.Server.Service_IOSystem.SqlConnectionPoolConfig">
            <summary>
            MySQL连接池
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_IOSystem.CreateMySQLConnectionStatement(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            拼接数据库连接语句
            </summary>
            <param name="Database">数据库名</param>
            <param name="DataSource">数据库地址</param>
            <param name="User_ID">数据库登录用户名</param>
            <param name="Password">数据库登录密码</param>
            <param name="port">数据库远程端口号</param>
            <returns>拼接好的连接语句</returns>
        </member>
        <member name="F:Fursion_CSharpTools.Net.Server.Service_IOSystem.MySQLSelectStatementTemplate">
            <summary>
            MySQL-Select查询语句模板；需要的参数，查询的列名，表名，限制条件
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_IOSystem.CreateMySQLSelectStatement(System.String,System.String,System.String)">
            <summary>
            拼接数据库查询语句
            </summary>
            <param name="ColumnName">要查询的列的名字</param>
            <param name="TableName">数据表的名字</param>
            <param name="Restrictions">查询的限制条件</param>
            <returns></returns>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_IOSystem.CreatSelectRestrictions(System.String,System.String,System.Object)">
            <summary>
            查询语句
            </summary>
            <param name="term"></param>
            <param name="MathSymbol">数学符号：= > >=  <![CDATA[=,<,>,>=,<=]]></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_IOSystem.ConnectSQL(System.String)">
            <summary>
            创建连接实例
            </summary>
            <param name="SQLConnectionStatement"></param>
            <returns></returns>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_IOSystem.QueryData">
            <summary>
            数据查询
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_IOSystem.SqlAddData">
            <summary>
            向数据库添加数据
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_IOSystem.DeleteData">
            <summary>
            从数据库删除数据
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_IOSystem.ModifyData">
            <summary>
            修改数据
            </summary>
        </member>
        <member name="T:Fursion_CSharpTools.Net.Server.IO_SqlQueryCallBackAction">
            <summary>
            
            </summary>
        </member>
        <member name="T:Fursion_CSharpTools.Net.Server.Service_MailSystemTool">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.Service_MailSystemTool.CreateMailUUID">
            <summary>
            创建邮件的唯一编号
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fursion_CSharpTools.Net.Server.TCPConnectMonitor">
            <summary>
            Socket服务器端监听类
            </summary>
        </member>
        <member name="F:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.SocketCall">
            <summary>
            用以注册用户自定义函数
            </summary>
        </member>
        <member name="F:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.connects">
            <summary>
            连接中间件数组
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.StarServer(System.Int32,Fursion_CSharpTools.SocketCallBack)">
            <summary>
            自动获取IP地址的启动函数
            </summary>
            <param name="Port"></param>
            <param name="callBack"></param>
            <returns></returns>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.StarServer(System.String,System.Int32,Fursion_CSharpTools.SocketCallBack)">
            <summary>
            自定义端口的启动函数
            </summary>
            <param name="IP"></param>
            <param name="Port"></param>
            <param name="callBack"></param>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.Get_Connect_Index">
            <summary>
            获取一个空的连接类索引
            </summary>
            <returns>返回-1表示连接已满</returns>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.AsyncReceiveCb(System.IAsyncResult)">
            <summary>
            异步接收回调
            </summary>
            <param name="Ar"></param>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.PossingData(Fursion_CSharpTools.Net.Public.Connect)">
            <summary>
            对从网络缓冲区拿到的数据得处理函数
            </summary>
            <param name="connect">连接类的实例</param>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.SubReceiveCb(System.IAsyncResult)">
            <summary>
            增量接收
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:Fursion_CSharpTools.Net.Server.TCPConnectMonitor.DataTransfer(System.Byte[],Fursion_CSharpTools.Net.Public.Connect)">
            <summary>
            数据传送
            </summary>
            <param name="bs"></param>
        </member>
        <member name="T:Fursion_CSharpTools.SocketCallBack">
            <summary>
            套接字委托，用以承接在收到数据后的自定义处理函数
            </summary>
            <param name="bs"></param>
        </member>
        <member name="T:Fursion_CSharpTools.ConnnctAction">
            <summary>
            连接类委托事件
            </summary>
            <param name="bs"></param>
        </member>
        <member name="T:Fursion_CSharpTools.ProcessingAction">
            <summary>
            委托=>处理远端连接发来的信息
            </summary>
            <param name="bs"></param>
            <param name="connect"></param>
        </member>
        <member name="T:Fursion_CSharpTools.CSharpTools">
            <summary>
            工具类
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.CSharpTools.PrintByteArray(System.Byte[])">
            <summary>
            打印·Byte数组
            </summary>
            <param name="bs"></param>
        </member>
        <member name="M:Fursion_CSharpTools.CSharpTools.Check_Key(System.String,System.String)">
            <summary>
            Key校验
            </summary>
            <param name="Key_Standard"></param>
            <param name="Key_Input"></param>
            <returns></returns>
        </member>
        <member name="M:Fursion_CSharpTools.CSharpTools.GetMethodDo(System.String,System.String)">
            <summary>
            通过给定的方法名和类名寻找并执行方法
            </summary>
            <param name="ClassName">类型名</param>
            <param name="MethodName">方法名</param>
        </member>
        <member name="M:Fursion_CSharpTools.CSharpTools.GetMethodDo``1(System.String)">
            <summary>
            在指定的类型中通过方法名找到方法并执行
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="MethodName">方法名</param>
        </member>
        <member name="T:Fursion_CSharpTools.Singleton`1">
            <summary>
            单例模式
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Fursion_CSharpTools.Singleton`1.instance">
            <summary>
            静态实例
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Singleton`1.GetInstance">
            <summary>
            获取实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fursion_CSharpTools.INfo">
            <summary>
            信息接口
            </summary>
        </member>
        <member name="P:Fursion_CSharpTools.INfo.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="T:Fursion_CSharpTools.Tools.DataEncryption">
            <summary>
            数据加密工具
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Tools.DataEncryption.GetAesKey(System.Int32,System.Byte[],System.String)">
            <summary>
            派生指定长度的密钥
            </summary>
            <param name="Size"></param>
            <param name="salt1"></param>
            <param name="Pwd"></param>
            <returns></returns>
        </member>
        <member name="T:Fursion_CSharpTools.Tools.AESEncryption">
            <summary>
            AES算法加密
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Tools.AESEncryption.SHACode(System.String)">
            <summary>
            采用SHA256的散列加密，不可逆。
            </summary>
            <param name="Vaule"></param>
            <returns></returns>
        </member>
        <member name="T:Fursion_CSharpTools.Tools.FDebug">
            <summary>
            
            </summary>
        </member>
        <member name="M:Fursion_CSharpTools.Tools.FDebug.LogHeader">
            <summary>
            输出日期和时间
            </summary>
        </member>
    </members>
</doc>
